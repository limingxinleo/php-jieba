name: PHPUnit for Hyperf

on: [ push, pull_request ]

jobs:
  ci:
    name: Test on PHP ${{ matrix.php-version }} Swoole ${{ matrix.swoole-version }}
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php-version: [ '8.0' ]
        swoole-version: [ 'v4.5.11', 'v4.6.7', 'v4.7.1', 'v4.8.6', 'master' ]
      max-parallel: 5
      fail-fast: false
    env:
      SW_VERSION: ${{ matrix.swoole-version }}
      PHP_VERSION: ${{ matrix.php-version }}
      JB_VERSION: '1.1.2'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize
          ini-values: opcache.enable_cli=0
          coverage: none
          extensions: pdo, pdo_mysql, redis
      - name: Setup Swoole
        run: ./.github/swoole.install.sh
      - name: Setup Jieba
        run: |
          wget https://github.com/limingxinleo/php-jieba-ext/archive/refs/tags/v${JB_VERSION}.tar.gz -O jieba.tar.gz
          mkdir -p jieba
          tar -xf jieba.tar.gz -C jieba --strip-components=1
          rm jieba.tar.gz
          cd jieba
          g++ -o libjieba.so -fPIC -c -DLOGGING_LEVEL=LL_WARNING -I./include/ lib/jieba.cpp
          phpize
          ./configure
          make
          sudo make install
          sudo sh -c "echo extension=jieba.so > /etc/php/${{ matrix.php-version }}/cli/conf.d/jieba.ini"
      - name: Build Docker Image
        run: |
          docker build . -t jieba
          docker run -p 9501:9501 --rm --name jieba jieba
      - name: Show Environment
        run: |
          php -v
          php -m
          php -i
      - name: Setup Packages
        run: composer update -o
      - name: Run Test Cases
        run: |
          cp .env.example .env
          vendor/bin/php-cs-fixer fix --dry-run
          composer analyse
          composer test
